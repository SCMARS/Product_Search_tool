version: '3.8'

services:
  # Backend сервис
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: product-search-backend
    ports:
      - "5001:5001"
    environment:
      - FLASK_ENV=production
      - PYTHONUNBUFFERED=1
      - CAPTCHA_API_KEY=${CAPTCHA_API_KEY}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    volumes:
      - ./backend/logs:/app/logs
      - ./backend/temp:/app/temp
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - product-search-network

  # Frontend сервис
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: product-search-frontend
    ports:
      - "80:80"
    depends_on:
      - backend
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - product-search-network

  # Redis для кэширования (опционально)
  redis:
    image: redis:7-alpine
    container_name: product-search-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    command: redis-server --appendonly yes
    networks:
      - product-search-network

networks:
  product-search-network:
    driver: bridge

volumes:
  redis_data:
