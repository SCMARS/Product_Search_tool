# Makefile –¥–ª—è Product Search Tool

.PHONY: help build up down logs restart clean dev prod test

# –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
COMPOSE_FILE_DEV = docker-compose.yml
COMPOSE_FILE_PROD = docker-compose.prod.yml

help: ## –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É
	@echo "Product Search Tool - –ö–æ–º–∞–Ω–¥—ã –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è"
	@echo ""
	@grep -E '^[a-zA-Z_-]+:.*?## .*$$' $(MAKEFILE_LIST) | sort | awk 'BEGIN {FS = ":.*?## "}; {printf "\033[36m%-20s\033[0m %s\n", $$1, $$2}'

build: ## –°–æ–±—Ä–∞—Ç—å Docker –æ–±—Ä–∞–∑—ã
	@echo "üî® –°–æ–±–∏—Ä–∞–µ–º Docker –æ–±—Ä–∞–∑—ã..."
	docker-compose -f $(COMPOSE_FILE_DEV) build

build-prod: ## –°–æ–±—Ä–∞—Ç—å Docker –æ–±—Ä–∞–∑—ã –¥–ª—è –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞
	@echo "üî® –°–æ–±–∏—Ä–∞–µ–º Docker –æ–±—Ä–∞–∑—ã –¥–ª—è –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞..."
	docker-compose -f $(COMPOSE_FILE_PROD) build

up: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
	@echo "üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏..."
	docker-compose -f $(COMPOSE_FILE_DEV) up -d
	@echo "‚úÖ –°–µ—Ä–≤–∏—Å—ã –∑–∞–ø—É—â–µ–Ω—ã:"
	@echo "   Frontend: http://localhost"
	@echo "   Backend: http://localhost:5003"

prod: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å –≤ —Ä–µ–∂–∏–º–µ –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞
	@echo "üè≠ –ó–∞–ø—É—Å–∫–∞–µ–º –≤ —Ä–µ–∂–∏–º–µ –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞..."
	docker-compose -f $(COMPOSE_FILE_PROD) up -d
	@echo "‚úÖ –°–µ—Ä–≤–∏—Å—ã –∑–∞–ø—É—â–µ–Ω—ã –≤ –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ"

down: ## –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤—Å–µ —Å–µ—Ä–≤–∏—Å—ã
	@echo "üõë –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–µ—Ä–≤–∏—Å—ã..."
	docker-compose -f $(COMPOSE_FILE_DEV) down --remove-orphans
	docker-compose -f $(COMPOSE_FILE_PROD) down --remove-orphans

logs: ## –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤
	docker-compose -f $(COMPOSE_FILE_DEV) logs -f

logs-backend: ## –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ backend
	docker-compose -f $(COMPOSE_FILE_DEV) logs -f backend

logs-frontend: ## –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ frontend
	docker-compose -f $(COMPOSE_FILE_DEV) logs -f frontend

restart: ## –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å —Å–µ—Ä–≤–∏—Å—ã
	@echo "üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–∏—Å—ã..."
	docker-compose -f $(COMPOSE_FILE_DEV) restart

restart-backend: ## –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å —Ç–æ–ª—å–∫–æ backend
	@echo "üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º backend..."
	docker-compose -f $(COMPOSE_FILE_DEV) restart backend

restart-frontend: ## –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å —Ç–æ–ª—å–∫–æ frontend
	@echo "üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º frontend..."
	docker-compose -f $(COMPOSE_FILE_DEV) restart frontend

status: ## –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–æ–≤
	@echo "üìä –°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–æ–≤:"
	docker-compose -f $(COMPOSE_FILE_DEV) ps

health: ## –ü—Ä–æ–≤–µ—Ä–∏—Ç—å health check
	@echo "üè• –ü—Ä–æ–≤–µ—Ä—è–µ–º health check..."
	@curl -f http://localhost:5003/health && echo "‚úÖ Backend –∑–¥–æ—Ä–æ–≤" || echo "‚ùå Backend –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç"
	@curl -f http://localhost/ > /dev/null 2>&1 && echo "‚úÖ Frontend –∑–¥–æ—Ä–æ–≤" || echo "‚ùå Frontend –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç"

clean: ## –û—á–∏—Å—Ç–∏—Ç—å –≤—Å–µ Docker —Ä–µ—Å—É—Ä—Å—ã
	@echo "üßπ –û—á–∏—â–∞–µ–º Docker —Ä–µ—Å—É—Ä—Å—ã..."
	docker-compose -f $(COMPOSE_FILE_DEV) down --remove-orphans --volumes
	docker-compose -f $(COMPOSE_FILE_PROD) down --remove-orphans --volumes
	docker system prune -f
	docker volume prune -f

shell-backend: ## –í–æ–π—Ç–∏ –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä backend
	docker-compose -f $(COMPOSE_FILE_DEV) exec backend /bin/bash

shell-frontend: ## –í–æ–π—Ç–∏ –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä frontend
	docker-compose -f $(COMPOSE_FILE_DEV) exec frontend /bin/sh

test: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç–µ—Å—Ç—ã
	@echo "üß™ –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç—ã..."
	docker-compose -f $(COMPOSE_FILE_DEV) exec backend python -m pytest tests/ -v

install: ## –ü–µ—Ä–≤–æ–Ω–∞—á–∞–ª—å–Ω–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞
	@echo "üì¶ –ü–µ—Ä–≤–æ–Ω–∞—á–∞–ª—å–Ω–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞..."
	@if [ ! -f .env ]; then \
		cp .env.example .env; \
		echo "üìù –°–æ–∑–¥–∞–Ω —Ñ–∞–π–ª .env. –û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ –µ–≥–æ –∏ –¥–æ–±–∞–≤—å—Ç–µ API –∫–ª—é—á–∏."; \
	fi
	$(MAKE) build
	$(MAKE) up
	@echo "üéâ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"

deploy: ## –ü–æ–ª–Ω—ã–π –¥–µ–ø–ª–æ–π (–æ—Å—Ç–∞–Ω–æ–≤–∫–∞, —Å–±–æ—Ä–∫–∞, –∑–∞–ø—É—Å–∫)
	@echo "üöÄ –ü–æ–ª–Ω—ã–π –¥–µ–ø–ª–æ–π..."
	$(MAKE) down
	$(MAKE) build
	$(MAKE) up
	$(MAKE) health

deploy-prod: ## –ü–æ–ª–Ω—ã–π –¥–µ–ø–ª–æ–π –≤ –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ
	@echo "üè≠ –ü–æ–ª–Ω—ã–π –¥–µ–ø–ª–æ–π –≤ –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ..."
	$(MAKE) down
	$(MAKE) build-prod
	$(MAKE) prod
	$(MAKE) health
