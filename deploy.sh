#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è –¥–µ–ø–ª–æ—è Product Search Tool

set -e  # –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –ø—Ä–∏ –æ—à–∏–±–∫–µ

echo "üöÄ –ù–∞—á–∏–Ω–∞–µ–º –¥–µ–ø–ª–æ–π Product Search Tool..."

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ Docker —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω
if ! command -v docker &> /dev/null; then
    echo "‚ùå Docker –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Docker –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞."
    exit 1
fi

if ! command -v docker-compose &> /dev/null; then
    echo "‚ùå Docker Compose –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Docker Compose –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞."
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ .env —Ñ–∞–π–ª–∞
if [ ! -f .env ]; then
    echo "‚ö†Ô∏è  –§–∞–π–ª .env –Ω–µ –Ω–∞–π–¥–µ–Ω. –°–æ–∑–¥–∞–µ–º –∏–∑ –ø—Ä–∏–º–µ—Ä–∞..."
    cp .env.example .env
    echo "üìù –û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ —Ñ–∞–π–ª .env –∏ –¥–æ–±–∞–≤—å—Ç–µ –≤–∞—à–∏ API –∫–ª—é—á–∏:"
    echo "   - CAPTCHA_API_KEY (–ø–æ–ª—É—á–∏—Ç—å –Ω–∞ https://2captcha.com/)"
    echo "   - OPENAI_API_KEY (–ø–æ–ª—É—á–∏—Ç—å –Ω–∞ https://platform.openai.com/)"
    echo ""
    read -p "–ù–∞–∂–º–∏—Ç–µ Enter –ø–æ—Å–ª–µ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è .env —Ñ–∞–π–ª–∞..."
fi

# –í—ã–±–∏—Ä–∞–µ–º —Ä–µ–∂–∏–º –¥–µ–ø–ª–æ—è
echo "–í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–∂–∏–º –¥–µ–ø–ª–æ—è:"
echo "1. –†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ (development)"
echo "2. –ü—Ä–æ–¥–∞–∫—à–µ–Ω (production)"
read -p "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä (1-2): " deploy_mode

case $deploy_mode in
    1)
        echo "üîß –ó–∞–ø—É—Å–∫–∞–µ–º –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏..."
        COMPOSE_FILE="docker-compose.yml"
        ;;
    2)
        echo "üè≠ –ó–∞–ø—É—Å–∫–∞–µ–º –≤ —Ä–µ–∂–∏–º–µ –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞..."
        COMPOSE_FILE="docker-compose.prod.yml"
        ;;
    *)
        echo "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä. –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ä–µ–∂–∏–º —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏."
        COMPOSE_FILE="docker-compose.yml"
        ;;
esac

# –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
echo "üõë –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã..."
docker-compose -f $COMPOSE_FILE down --remove-orphans

# –°–æ–±–∏—Ä–∞–µ–º –æ–±—Ä–∞–∑—ã
echo "üî® –°–æ–±–∏—Ä–∞–µ–º Docker –æ–±—Ä–∞–∑—ã..."
docker-compose -f $COMPOSE_FILE build --no-cache

# –ó–∞–ø—É—Å–∫–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
echo "‚ñ∂Ô∏è  –ó–∞–ø—É—Å–∫–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã..."
docker-compose -f $COMPOSE_FILE up -d

# –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤
echo "‚è≥ –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤..."
sleep 30

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–æ–≤
echo "üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–æ–≤..."
docker-compose -f $COMPOSE_FILE ps

# –ü—Ä–æ–≤–µ—Ä—è–µ–º health check
echo "üè• –ü—Ä–æ–≤–µ—Ä—è–µ–º health check..."
if curl -f http://localhost:5003/health > /dev/null 2>&1; then
    echo "‚úÖ Backend –∑–∞–ø—É—â–µ–Ω —É—Å–ø–µ—à–Ω–æ"
else
    echo "‚ùå Backend –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç"
fi

if curl -f http://localhost/ > /dev/null 2>&1; then
    echo "‚úÖ Frontend –∑–∞–ø—É—â–µ–Ω —É—Å–ø–µ—à–Ω–æ"
else
    echo "‚ùå Frontend –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç"
fi

echo ""
echo "üéâ –î–µ–ø–ª–æ–π –∑–∞–≤–µ—Ä—à–µ–Ω!"
echo ""
echo "üì± –î–æ—Å—Ç—É–ø–Ω—ã–µ —Å–µ—Ä–≤–∏—Å—ã:"
echo "   Frontend: http://localhost"
echo "   Backend API: http://localhost:5003"
echo "   Health Check: http://localhost:5003/health"
echo ""
echo "üìã –ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:"
echo "   –ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤: docker-compose -f $COMPOSE_FILE logs -f"
echo "   –û—Å—Ç–∞–Ω–æ–≤–∫–∞: docker-compose -f $COMPOSE_FILE down"
echo "   –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫: docker-compose -f $COMPOSE_FILE restart"
echo ""
echo "üîß –î–ª—è –æ—Ç–ª–∞–¥–∫–∏:"
echo "   Backend –ª–æ–≥–∏: docker-compose -f $COMPOSE_FILE logs -f backend"
echo "   Frontend –ª–æ–≥–∏: docker-compose -f $COMPOSE_FILE logs -f frontend"
